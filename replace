#!/usr/bin/env python

import sys
import os

if len(sys.argv) == 2:
	project_root = sys.argv[1]

else:
	try:
		project_root = os.environ['AOSP_ROOT']
		print("Using AOSP_ROOT: " + project_root)
	except KeyError:
		print("AOSP_ROOT environment variable undefined\nIt is recommended to put 'export AOSP_ROOT=\"</some/path/>\"' in your .bashrc")
		os.environ['AOSP_ROOT'] = raw_input("Temporarily Set AOSP_ROOT:")


for p, subdirs, files in os.walk('./'):
	for fname in files:

		if fname == "replace":
			print("Skipping " + fname)
			continue

		new_file = os.path.abspath(os.path.join(p, fname))
		print("New File: " + new_file)

		# Backup old file
		orig = os.path.join(project_root, os.path.join(p, fname))
		orig_back = orig + ".bak"
		if not(os.path.exists(orig_back)) and not(os.path.islink(orig)):
			print("Backing up original file: " + orig)
			try:
				os.rename(orig, orig_back)
			except OSError:
				print("Couldn't backup: " + orig)
				print("ABORTING")
				exit(1)

		# Replace with ln to this file
		#os.symlink(source, link_name)
		#	Create a symbolic link pointing to source named link_name.
		print("Creating link " + orig + " => " + new_file)
		try:
			os.symlink(new_file, orig)
		except OSError:
			print("Couldn't create symlink: " + orig + " => " + new_file)


		#print (fname + " : " + os.path.abspath(os.path.join(p,fname)))
